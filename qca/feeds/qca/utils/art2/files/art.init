#!/bin/sh /etc/rc.common
#
# Copyright (c) 2013 Qualcomm Atheros, Inc..
#
# All Rights Reserved.
# Qualcomm Atheros Confidential and Proprietary.
#

# We don't want to start ART2 automatically at boot time as we want the
# default to be a working user configuration.
# At the end of the boot process, the user can start art using:
# /etc/init.d/art start
START=
SERVICE_DAEMONIZE=1
SERVICE_WRITE_PID=1
wifi_dir=/sys/class/net/wifi

MTD_ART_PART_NAME="art"

unload_modules() {
	for mod in art $(cat /etc/modules.d/33-qca-wifi* | sed '1!G;h;$!d'); do
		[ -d /sys/module/${mod} ] && rmmod ${mod}
	done
}

load_modules() {
	for mod in $(cat /etc/modules.d/33-qca-wifi*) art ; do
		case ${mod} in
			umac) insmod ${mod} testmode=1 ahbskip=1;;
			*) insmod ${mod};;
		esac
		[ -d /sys/module/${mod} ] || insmod ${mod}
	done
}

start_nart_out() {
	local wifi_index=$1

	SERVICE_PID_FILE=/var/run/nart${wifi_index}.pid
	service_start /usr/sbin/nart.out -instance ${wifi_index} -pcie ${wifi_index} -console
}

stop_nart_out() {
	local wifi_index=$1

	SERVICE_PID_FILE=/var/run/nart${wifi_index}.pid
	service_stop /usr/sbin/nart.out -instance ${wifi_index} -pcie ${wifi_index} -console
}

start() {
	config_load wireless

	# ART2 conflicts with the WiFi driver so we don't start anything here
	# We'll just prepare the field in case we want to start nart.out
	[ -c /dev/dk0 ] || mknod /dev/dk0 c 63 0
	[ -c /dev/dk1 ] || mknod /dev/dk1 c 63 1

	mtd_name=$(grep ${MTD_ART_PART_NAME} /proc/mtd | cut -f1 -d:)
	[ -L /dev/caldata ] || \
		ln -s /dev/${mtd_name//mtd/mtdblock} /dev/caldata

	load_modules

# Start the daemon
	for dir in /sys/class/net/wifi*; do
		[ -d "$dir" ] || continue
		start_nart_out "${dir#"$wifi_dir"}"
	done

}

stop() {
	config_load wireless

	# Stop the daemon
	for dir in /sys/class/net/wifi*; do
		[ -d "$dir" ] || continue
		stop_nart_out "${dir#"$wifi_dir"}"
	done

	unload_modules

	rm /dev/dk0 /dev/dk1
	rm /dev/caldata
}
